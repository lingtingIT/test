{"version":3,"file":"js/827.934a3a1e.js","mappings":"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","sources":["webpack://lt-components/./src/views/Components/MosaicPicture.vue","webpack://lt-components/src/views/Components/MosaicPicture.vue","webpack://lt-components/./src/views/Components/MosaicPicture.vue?9193","webpack://lt-components/./src/views/Components/MosaicPicture.vue?616d"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"lt-mosaic-picture-wrapper\"},[_c('div',{staticClass:\"mosaic-container\"},[_c('div',{staticClass:\"mosaic-container-label\"},[_vm._v(\"上传Logo:\")]),_c('div',{staticClass:\"upload-box\"},[_c('div',{staticClass:\"upload-main\"},[_c('el-upload',{staticClass:\"logo-uploader\",attrs:{\"action\":\"\",\"auto-upload\":false,\"show-file-list\":false,\"on-change\":(file, fileList) => _vm.onFileChange(file, fileList, 1),\"accept\":\".png\"}},[(_vm.image1)?_c('img',{staticClass:\"logo small-logo\",attrs:{\"src\":_vm.image1}}):_c('i',{staticClass:\"el-icon-plus logo-uploader-icon small-logo-uploader-icon\"})]),_c('el-upload',{staticClass:\"logo-uploader\",attrs:{\"action\":\"\",\"auto-upload\":false,\"show-file-list\":false,\"on-change\":(file, fileList) => _vm.onFileChange(file, fileList, 2),\"accept\":\".png\"}},[(_vm.image2)?_c('img',{staticClass:\"logo big-logo\",attrs:{\"src\":_vm.image2}}):_c('i',{staticClass:\"el-icon-plus logo-uploader-icon big-logo-uploader-icon\"})])],1),_c('div',{staticClass:\"btn-main\"},[_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\"},on:{\"click\":function($event){return _vm.echoPicture('/image/logo.png')}}},[_vm._v(\"回显图片\")])],1)]),_vm._m(0),_c('div',{staticClass:\"result-box\"},[_c('div',{staticClass:\"mosaic-container-label\"},[_vm._v(\"拼接后的图片:\")]),(_vm.mergedImage)?_c('img',{attrs:{\"src\":_vm.mergedImage,\"alt\":\"Merged Image\"}}):_vm._e()])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"URS\"},[_c('div',{staticClass:\"urs-left\"},[_c('div',[_vm._v(\"格式限制：只支持.png格式\")]),_c('div',[_vm._v(\"长宽限制：小Logo为40*40像素，大Logo为120*120像素\")]),_c('div',[_vm._v(\"上传后会把两张图片进行拼接\")])]),_c('div',{staticClass:\"urs-right\"},[_c('div',[_vm._v(\"示例：\")]),_c('img',{attrs:{\"src\":require(\"@/assets/image/canvas/mosaic_example.png\")}})])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n    <div class=\"lt-mosaic-picture-wrapper\">\r\n\r\n        <div class=\"mosaic-container\">\r\n            <div class=\"mosaic-container-label\">上传Logo:</div>\r\n            <div class=\"upload-box\">\r\n                <div class=\"upload-main\">\r\n                    <el-upload class=\"logo-uploader\" action=\"\" :auto-upload=\"false\" :show-file-list=\"false\"\r\n                        :on-change=\"(file, fileList) => onFileChange(file, fileList, 1)\" accept=\".png\">\r\n                        <img v-if=\"image1\" :src=\"image1\" class=\"logo small-logo\">\r\n                        <i v-else class=\"el-icon-plus logo-uploader-icon small-logo-uploader-icon\"></i>\r\n                    </el-upload>\r\n                    <el-upload class=\"logo-uploader\" action=\"\" :auto-upload=\"false\" :show-file-list=\"false\"\r\n                        :on-change=\"(file, fileList) => onFileChange(file, fileList, 2)\" accept=\".png\">\r\n                        <img v-if=\"image2\" :src=\"image2\" class=\"logo big-logo\">\r\n                        <i v-else class=\"el-icon-plus logo-uploader-icon big-logo-uploader-icon\"></i>\r\n                    </el-upload>\r\n                </div>\r\n                <div class=\"btn-main\">\r\n                    <el-button size=\"mini\" type=\"primary\" @click=\"echoPicture('/image/logo.png')\">回显图片</el-button>\r\n                </div>\r\n            </div>\r\n            <div class=\"URS\">\r\n                <div class=\"urs-left\">\r\n                    <div>格式限制：只支持.png格式</div>\r\n                    <div>长宽限制：小Logo为40*40像素，大Logo为120*120像素</div>\r\n                    <div>上传后会把两张图片进行拼接</div>\r\n                </div>\r\n                <div class=\"urs-right\">\r\n                    <div>示例：</div>\r\n                    <img src=\"@/assets/image/canvas/mosaic_example.png\">\r\n                </div>\r\n            </div>\r\n            <div class=\"result-box\">\r\n                <div class=\"mosaic-container-label\">拼接后的图片:</div> \r\n                <img v-if=\"mergedImage\" :src=\"mergedImage\" alt=\"Merged Image\" />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            image1: null, // 图片1的base64\r\n            image2: null, // 图片2的base64\r\n            mergedImage: null, // 拼接后的图片的base64\r\n        };\r\n    },\r\n    methods: {\r\n        // 处理图片上传\r\n        onFileChange(file, fileList, imageNumber) {\r\n            const fileRaw = file.raw\r\n            if (fileRaw && fileRaw.type === \"image/png\") {\r\n                const reader = new FileReader();\r\n                reader.onload = (e) => {\r\n                    const imageBase64 = e.target.result;\r\n                    const img = new Image();\r\n                    img.onload = () => {\r\n                        if (\r\n                            (imageNumber === 1 && img.width === 40 && img.height === 40) ||\r\n                            (imageNumber === 2 && img.width === 120 && img.height === 120)\r\n                        ) {\r\n                            if (imageNumber === 1) {\r\n                                this.image1 = imageBase64;\r\n                            } else {\r\n                                this.image2 = imageBase64;\r\n                            }\r\n                            this.mergeImages();\r\n                        } else {\r\n                            this.$message({\r\n                                message: `${imageNumber == 1 ? '小' : '大'}Logo的尺寸不正确！`,\r\n                                type: 'warning'\r\n                            });\r\n                        }\r\n                    };\r\n                    img.src = imageBase64;\r\n                };\r\n                reader.readAsDataURL(fileRaw);\r\n            } else {\r\n                this.$message({\r\n                    message: \"请选择.png格式的图片\",\r\n                    type: 'warning'\r\n                });\r\n            }\r\n        },\r\n        // 合并图片\r\n        mergeImages() {\r\n            const canvas = document.createElement(\"canvas\");\r\n            const ctx = canvas.getContext(\"2d\");\r\n\r\n            const img1 = new Image();\r\n            const img2 = new Image();\r\n            const _this = this\r\n            function merge() {\r\n                canvas.width = 160; // 宽度为160\r\n                canvas.height = 120; // 高度为120\r\n\r\n                // 绘制图片2或者空白区域\r\n                if (_this.image2) {\r\n                    ctx.drawImage(img2, 40, 0); // 图片2从坐标(40, 0)开始绘制\r\n                } else {\r\n                    ctx.fillStyle = \"#e0e0e0\"; // 空白颜色\r\n                    ctx.fillRect(40, 0, 120, 120); // 填充120x120的空白区域\r\n                }\r\n\r\n                // 绘制图片1或者空白区域\r\n                if (_this.image1) {\r\n                    ctx.drawImage(img1, 0, 80); // 图片1从坐标(0, 80)开始绘制\r\n                } else {\r\n                    ctx.fillStyle = \"#e0e0e0\"; // 空白颜色\r\n                    ctx.fillRect(0, 80, 40, 40); // 填充40x40的空白区域\r\n                }\r\n\r\n                _this.mergedImage = canvas.toDataURL(\"image/png\");\r\n            }\r\n\r\n            img1.onload = () => {\r\n                merge()\r\n\r\n\r\n            };\r\n            img2.onload = () => {\r\n                merge()\r\n            };\r\n            img2.src = this.image2 || \"\"; // 如果没有图片2，触发空白填充\r\n            img1.src = this.image1 || \"\"; // 如果没有图片1，触发空白填充\r\n        },\r\n        //回显图片\r\n        echoPicture(url) {\r\n            const image = new Image();\r\n            image.src = url; // 替换为你实际的图片路径\r\n            image.onload = () => {\r\n                // 创建画布来进行裁剪\r\n                const canvas1 = document.createElement('canvas');\r\n                const canvas2 = document.createElement('canvas');\r\n                const ctx1 = canvas1.getContext('2d');\r\n                const ctx2 = canvas2.getContext('2d');\r\n\r\n                // 裁剪区域\r\n                const rect1 = { x: 0, y: 80, width: 40, height: 40 };\r\n                const rect2 = { x: 40, y: 0, width: 120, height: 120 };\r\n\r\n                // 设置画布尺寸\r\n                canvas1.width = rect1.width;\r\n                canvas1.height = rect1.height;\r\n                canvas2.width = rect2.width;\r\n                canvas2.height = rect2.height;\r\n\r\n                // 绘制裁剪区域到画布\r\n                ctx1.drawImage(image, rect1.x, rect1.y, rect1.width, rect1.height, 0, 0, rect1.width, rect1.height);\r\n                ctx2.drawImage(image, rect2.x, rect2.y, rect2.width, rect2.height, 0, 0, rect2.width, rect2.height);\r\n\r\n                // 设置裁剪后的图像作为组件的数据\r\n                this.image1 = canvas1.toDataURL(\"image/png\");\r\n                this.image2 = canvas2.toDataURL(\"image/png\");\r\n            };\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.lt-mosaic-picture-wrapper {\r\n    flex: 1;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .mosaic-container {\r\n        flex: 1;\r\n        width: 100%;\r\n\r\n        .upload-box {\r\n            display: flex;\r\n\r\n            .upload-main {\r\n                display: flex;\r\n                align-items: flex-end;\r\n\r\n                .logo-uploader .el-upload {\r\n                    border: 1px dashed #d9d9d9;\r\n                    border-radius: 6px;\r\n                    cursor: pointer;\r\n                    position: relative;\r\n                    overflow: hidden;\r\n                }\r\n\r\n                .logo-uploader .el-upload:hover {\r\n                    border-color: #409EFF;\r\n                }\r\n\r\n                .logo-uploader-icon {\r\n                    font-size: 12px;\r\n                    color: #8c939d;\r\n                    width: 28px;\r\n                    height: 28px;\r\n                    line-height: 28px;\r\n                    text-align: center;\r\n                }\r\n\r\n                .big-logo-uploader-icon {\r\n                    font-size: 20px;\r\n                    width: 84px;\r\n                    height: 84px;\r\n                    line-height: 84px;\r\n                }\r\n\r\n                .logo {\r\n                    width: 28px;\r\n                    height: 28px;\r\n                    display: block;\r\n                }\r\n\r\n                .big-logo {\r\n                    width: 84px;\r\n                    height: 84px;\r\n                }\r\n            }\r\n\r\n            .btn-main {\r\n                display: flex;\r\n                flex-direction: column;\r\n                justify-content: center;\r\n                margin-left: 20px;\r\n            }\r\n\r\n        }\r\n\r\n        .URS {\r\n            display: flex;\r\n            padding: 20px 0;\r\n            width: 100%;\r\n            font-size: 13px;\r\n            color: #999;\r\n            line-height: 22px;\r\n\r\n            .urs-left {\r\n                padding-bottom: 5px;\r\n                width: 360px;\r\n            }\r\n\r\n            .urs-right {\r\n                display: flex;\r\n            }\r\n        }\r\n\r\n        .result-box {\r\n            margin-top: 20px;\r\n\r\n            img {\r\n                border-bottom-left-radius: 2px;\r\n                border-top-right-radius: 6px;\r\n                border-bottom-right-radius: 6px;\r\n            }\r\n        }\r\n\r\n        .mosaic-container-label {\r\n            color: #666;\r\n            margin-bottom: 20px;\r\n        }\r\n\r\n    }\r\n}\r\n</style>","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MosaicPicture.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MosaicPicture.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./MosaicPicture.vue?vue&type=template&id=7738f50d\"\nimport script from \"./MosaicPicture.vue?vue&type=script&lang=js\"\nexport * from \"./MosaicPicture.vue?vue&type=script&lang=js\"\nimport style0 from \"./MosaicPicture.vue?vue&type=style&index=0&id=7738f50d&prod&lang=scss\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_v","attrs","on-change","file","fileList","onFileChange","image1","image2","on","$event","echoPicture","_m","mergedImage","_e","staticRenderFns","require","data","methods","imageNumber","fileRaw","raw","type","reader","FileReader","onload","e","imageBase64","target","result","img","Image","width","height","mergeImages","$message","message","src","readAsDataURL","canvas","document","createElement","ctx","getContext","img1","img2","_this","merge","drawImage","fillStyle","fillRect","toDataURL","url","image","canvas1","canvas2","ctx1","ctx2","rect1","x","y","rect2","component"],"sourceRoot":""}